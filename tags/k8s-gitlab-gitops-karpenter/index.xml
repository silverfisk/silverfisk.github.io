<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>k8s, GitLab, GitOps, karpenter on linux-konsult.com</title><link>https://linux-konsult.com/tags/k8s-gitlab-gitops-karpenter/</link><description>Recent content in k8s, GitLab, GitOps, karpenter on linux-konsult.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 27 Oct 2022 14:30:00 +0200</lastBuildDate><atom:link href="https://linux-konsult.com/tags/k8s-gitlab-gitops-karpenter/index.xml" rel="self" type="application/rss+xml"/><item><title>Let karpenter just-in-time scheduler manage disk pressure</title><link>https://linux-konsult.com/posts/k8s/karpenter/</link><pubDate>Thu, 27 Oct 2022 14:30:00 +0200</pubDate><guid>https://linux-konsult.com/posts/k8s/karpenter/</guid><description>Overview Karpenter is used for automatic rightscaling (and rightsizing) kubernetes nodes in a cluster.
For this the Provisioner kind is used to configure the just-in-time node scheduler.
An issue we have is that GitLab CI jobs fill up node storage. GitLab creates a new pod for each CI job.
This lets karpenter configure the nodes to automatically perform garbage collection, and taint itself to avoid further pod scheduling. As a last resort it will kill greedy CI jobs to keep the cluster as a whole more consistent and performant.</description></item></channel></rss>